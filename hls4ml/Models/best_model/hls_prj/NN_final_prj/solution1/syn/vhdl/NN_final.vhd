-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity NN_final is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fc1_input_V_ap_vld : IN STD_LOGIC;
    fc1_input_V : IN STD_LOGIC_VECTOR (47 downto 0);
    layer10_out_0_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer10_out_0_V_ap_vld : OUT STD_LOGIC;
    layer10_out_1_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer10_out_1_V_ap_vld : OUT STD_LOGIC;
    layer10_out_2_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer10_out_2_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of NN_final is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "NN_final,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a35t-csg324-3,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.334875,HLS_SYN_LAT=23,HLS_SYN_TPT=1,HLS_SYN_MEM=3,HLS_SYN_DSP=4,HLS_SYN_FF=4170,HLS_SYN_LUT=9900,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal fc1_input_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal fc1_input_V_preg : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    signal fc1_input_V_in_sig : STD_LOGIC_VECTOR (47 downto 0);
    signal fc1_input_V_ap_vld_preg : STD_LOGIC := '0';
    signal fc1_input_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal layer2_out_1_V_reg_435 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_5_V_reg_440 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_6_V_reg_445 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_7_V_reg_450 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_8_V_reg_455 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_9_V_reg_460 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_11_V_reg_465 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_12_V_reg_470 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_13_V_reg_475 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_14_V_reg_480 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_15_V_reg_485 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_16_V_reg_490 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_18_V_reg_495 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_19_V_reg_500 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_1_V_reg_505 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_5_V_reg_510 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_6_V_reg_515 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_7_V_reg_520 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_8_V_reg_525 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_9_V_reg_530 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_11_V_reg_535 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_12_V_reg_540 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_13_V_reg_545 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_14_V_reg_550 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_15_V_reg_555 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_16_V_reg_560 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_18_V_reg_565 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer4_out_19_V_reg_570 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer5_out_0_V_reg_575 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_1_V_reg_580 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_2_V_reg_585 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_5_V_reg_590 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_6_V_reg_595 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_8_V_reg_600 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_9_V_reg_605 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_10_V_reg_610 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_11_V_reg_615 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_13_V_reg_620 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_14_V_reg_625 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_15_V_reg_630 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_16_V_reg_635 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_17_V_reg_640 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_18_V_reg_645 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_19_V_reg_650 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer7_out_0_V_reg_655 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_1_V_reg_660 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_2_V_reg_665 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_5_V_reg_670 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_6_V_reg_675 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_8_V_reg_680 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_9_V_reg_685 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_10_V_reg_690 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_11_V_reg_695 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_13_V_reg_700 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_14_V_reg_705 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_15_V_reg_710 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_16_V_reg_715 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_17_V_reg_720 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_18_V_reg_725 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer7_out_19_V_reg_730 : STD_LOGIC_VECTOR (4 downto 0);
    signal layer8_out_0_V_reg_735 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer8_out_1_V_reg_740 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer8_out_2_V_reg_745 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call39 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call39 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call39 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call39 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call39 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call39 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call39 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call39 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call39 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call39 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call39 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call39 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call39 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call39 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call39 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call39 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call39 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call39 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call39 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call39 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call39 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22_ignore_call39 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp57 : BOOLEAN;
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_ready : STD_LOGIC;
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_0 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_2 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_3 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_4 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_5 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_6 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_7 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_8 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_9 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_10 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_11 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_12 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_13 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_14 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_15 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_ready : STD_LOGIC;
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_0 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_2 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_3 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_4 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_5 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_6 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_7 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_8 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_9 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_10 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_11 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_12 : STD_LOGIC_VECTOR (4 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_13 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call73 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call73 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call73 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call73 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call73 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call73 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call73 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call73 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call73 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call73 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call73 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call73 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call73 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call73 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call73 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call73 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call73 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call73 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call73 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call73 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call73 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call73 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22_ignore_call73 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23_ignore_call73 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp95 : BOOLEAN;
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call9 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call9 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call9 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call9 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call9 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call9 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call9 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call9 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call9 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call9 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call9 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call9 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call9 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call9 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call9 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call9 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call9 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call9 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22_ignore_call9 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23_ignore_call9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp26 : BOOLEAN;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_start : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_done : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_idle : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_ready : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_ce : STD_LOGIC;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call77 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call77 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call77 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call77 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call77 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call77 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call77 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call77 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call77 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call77 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call77 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call77 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call77 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call77 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call77 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call77 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call77 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call77 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call77 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call77 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call77 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call77 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22_ignore_call77 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23_ignore_call77 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp102 : BOOLEAN;
    signal grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to22 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_1_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_V_read : IN STD_LOGIC_VECTOR (47 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75 : component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_1_V_read => layer4_out_1_V_reg_505,
        data_5_V_read => layer4_out_5_V_reg_510,
        data_6_V_read => layer4_out_6_V_reg_515,
        data_7_V_read => layer4_out_7_V_reg_520,
        data_8_V_read => layer4_out_8_V_reg_525,
        data_9_V_read => layer4_out_9_V_reg_530,
        data_11_V_read => layer4_out_11_V_reg_535,
        data_12_V_read => layer4_out_12_V_reg_540,
        data_13_V_read => layer4_out_13_V_reg_545,
        data_14_V_read => layer4_out_14_V_reg_550,
        data_15_V_read => layer4_out_15_V_reg_555,
        data_16_V_read => layer4_out_16_V_reg_560,
        data_18_V_read => layer4_out_18_V_reg_565,
        data_19_V_read => layer4_out_19_V_reg_570,
        ap_return_0 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_0,
        ap_return_1 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_1,
        ap_return_2 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_2,
        ap_return_3 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_3,
        ap_return_4 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_4,
        ap_return_5 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_5,
        ap_return_6 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_6,
        ap_return_7 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_7,
        ap_return_8 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_8,
        ap_return_9 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_9,
        ap_return_10 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_10,
        ap_return_11 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_11,
        ap_return_12 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_12,
        ap_return_13 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_13,
        ap_return_14 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_14,
        ap_return_15 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_15,
        ap_ce => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_ce);

    call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93 : component relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s
    port map (
        ap_ready => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_ready,
        data_0_V_read => layer5_out_0_V_reg_575,
        data_1_V_read => layer5_out_1_V_reg_580,
        data_2_V_read => layer5_out_2_V_reg_585,
        data_5_V_read => layer5_out_5_V_reg_590,
        data_6_V_read => layer5_out_6_V_reg_595,
        data_8_V_read => layer5_out_8_V_reg_600,
        data_9_V_read => layer5_out_9_V_reg_605,
        data_10_V_read => layer5_out_10_V_reg_610,
        data_11_V_read => layer5_out_11_V_reg_615,
        data_13_V_read => layer5_out_13_V_reg_620,
        data_14_V_read => layer5_out_14_V_reg_625,
        data_15_V_read => layer5_out_15_V_reg_630,
        data_16_V_read => layer5_out_16_V_reg_635,
        data_17_V_read => layer5_out_17_V_reg_640,
        data_18_V_read => layer5_out_18_V_reg_645,
        data_19_V_read => layer5_out_19_V_reg_650,
        ap_return_0 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_0,
        ap_return_1 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_1,
        ap_return_2 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_2,
        ap_return_3 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_3,
        ap_return_4 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_4,
        ap_return_5 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_5,
        ap_return_6 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_6,
        ap_return_7 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_7,
        ap_return_8 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_8,
        ap_return_9 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_9,
        ap_return_10 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_10,
        ap_return_11 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_11,
        ap_return_12 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_12,
        ap_return_13 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_13,
        ap_return_14 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_14,
        ap_return_15 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_15);

    call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113 : component relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s
    port map (
        ap_ready => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_ready,
        data_1_V_read => layer2_out_1_V_reg_435,
        data_5_V_read => layer2_out_5_V_reg_440,
        data_6_V_read => layer2_out_6_V_reg_445,
        data_7_V_read => layer2_out_7_V_reg_450,
        data_8_V_read => layer2_out_8_V_reg_455,
        data_9_V_read => layer2_out_9_V_reg_460,
        data_11_V_read => layer2_out_11_V_reg_465,
        data_12_V_read => layer2_out_12_V_reg_470,
        data_13_V_read => layer2_out_13_V_reg_475,
        data_14_V_read => layer2_out_14_V_reg_480,
        data_15_V_read => layer2_out_15_V_reg_485,
        data_16_V_read => layer2_out_16_V_reg_490,
        data_18_V_read => layer2_out_18_V_reg_495,
        data_19_V_read => layer2_out_19_V_reg_500,
        ap_return_0 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_0,
        ap_return_1 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_1,
        ap_return_2 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_2,
        ap_return_3 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_3,
        ap_return_4 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_4,
        ap_return_5 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_5,
        ap_return_6 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_6,
        ap_return_7 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_7,
        ap_return_8 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_8,
        ap_return_9 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_9,
        ap_return_10 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_10,
        ap_return_11 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_11,
        ap_return_12 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_12,
        ap_return_13 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_13);

    grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131 : component dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => layer7_out_0_V_reg_655,
        data_1_V_read => layer7_out_1_V_reg_660,
        data_2_V_read => layer7_out_2_V_reg_665,
        data_5_V_read => layer7_out_5_V_reg_670,
        data_6_V_read => layer7_out_6_V_reg_675,
        data_8_V_read => layer7_out_8_V_reg_680,
        data_9_V_read => layer7_out_9_V_reg_685,
        data_10_V_read => layer7_out_10_V_reg_690,
        data_11_V_read => layer7_out_11_V_reg_695,
        data_13_V_read => layer7_out_13_V_reg_700,
        data_14_V_read => layer7_out_14_V_reg_705,
        data_15_V_read => layer7_out_15_V_reg_710,
        data_16_V_read => layer7_out_16_V_reg_715,
        data_17_V_read => layer7_out_17_V_reg_720,
        data_18_V_read => layer7_out_18_V_reg_725,
        data_19_V_read => layer7_out_19_V_reg_730,
        ap_return_0 => grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_return_2,
        ap_ce => grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_ce);

    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151 : component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_V_read => fc1_input_V_in_sig,
        ap_return_0 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_0,
        ap_return_1 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_1,
        ap_return_2 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_2,
        ap_return_3 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_3,
        ap_return_4 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_4,
        ap_return_5 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_5,
        ap_return_6 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_6,
        ap_return_7 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_7,
        ap_return_8 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_8,
        ap_return_9 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_9,
        ap_return_10 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_10,
        ap_return_11 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_11,
        ap_return_12 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_12,
        ap_return_13 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_13,
        ap_ce => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_ce);

    grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157 : component softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_start,
        ap_done => grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_done,
        ap_idle => grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_idle,
        ap_ready => grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_ready,
        ap_ce => grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_ce,
        data_0_V_read => layer8_out_0_V_reg_735,
        data_1_V_read => layer8_out_1_V_reg_740,
        data_2_V_read => layer8_out_2_V_reg_745,
        ap_return_0 => grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_return_0,
        ap_return_1 => grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_return_1,
        ap_return_2 => grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_return_2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    fc1_input_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                fc1_input_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    fc1_input_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (fc1_input_V_ap_vld = ap_const_logic_1))) then 
                    fc1_input_V_ap_vld_preg <= fc1_input_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    fc1_input_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                fc1_input_V_preg <= ap_const_lv48_0;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (fc1_input_V_ap_vld = ap_const_logic_1))) then 
                    fc1_input_V_preg <= fc1_input_V;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                layer2_out_11_V_reg_465 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_6;
                layer2_out_12_V_reg_470 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_7;
                layer2_out_13_V_reg_475 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_8;
                layer2_out_14_V_reg_480 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_9;
                layer2_out_15_V_reg_485 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_10;
                layer2_out_16_V_reg_490 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_11;
                layer2_out_18_V_reg_495 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_12;
                layer2_out_19_V_reg_500 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_13;
                layer2_out_1_V_reg_435 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_0;
                layer2_out_5_V_reg_440 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_1;
                layer2_out_6_V_reg_445 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_2;
                layer2_out_7_V_reg_450 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_3;
                layer2_out_8_V_reg_455 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_4;
                layer2_out_9_V_reg_460 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_return_5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                layer4_out_11_V_reg_535 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_6;
                layer4_out_12_V_reg_540 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_7;
                layer4_out_13_V_reg_545 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_8;
                layer4_out_14_V_reg_550 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_9;
                layer4_out_15_V_reg_555 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_10;
                layer4_out_16_V_reg_560 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_11;
                layer4_out_18_V_reg_565 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_12;
                layer4_out_19_V_reg_570 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_13;
                layer4_out_1_V_reg_505 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_0;
                layer4_out_5_V_reg_510 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_1;
                layer4_out_6_V_reg_515 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_2;
                layer4_out_7_V_reg_520 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_3;
                layer4_out_8_V_reg_525 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_4;
                layer4_out_9_V_reg_530 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config4_s_fu_113_ap_return_5;
                layer5_out_0_V_reg_575 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_0;
                layer5_out_10_V_reg_610 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_7;
                layer5_out_11_V_reg_615 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_8;
                layer5_out_13_V_reg_620 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_9;
                layer5_out_14_V_reg_625 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_10;
                layer5_out_15_V_reg_630 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_11;
                layer5_out_16_V_reg_635 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_12;
                layer5_out_17_V_reg_640 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_13;
                layer5_out_18_V_reg_645 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_14;
                layer5_out_19_V_reg_650 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_15;
                layer5_out_1_V_reg_580 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_1;
                layer5_out_2_V_reg_585 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_2;
                layer5_out_5_V_reg_590 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_3;
                layer5_out_6_V_reg_595 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_4;
                layer5_out_8_V_reg_600 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_5;
                layer5_out_9_V_reg_605 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_return_6;
                layer7_out_0_V_reg_655 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_0;
                layer7_out_10_V_reg_690 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_7;
                layer7_out_11_V_reg_695 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_8;
                layer7_out_13_V_reg_700 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_9;
                layer7_out_14_V_reg_705 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_10;
                layer7_out_15_V_reg_710 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_11;
                layer7_out_16_V_reg_715 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_12;
                layer7_out_17_V_reg_720 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_13;
                layer7_out_18_V_reg_725 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_14;
                layer7_out_19_V_reg_730 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_15;
                layer7_out_1_V_reg_660 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_1;
                layer7_out_2_V_reg_665 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_2;
                layer7_out_5_V_reg_670 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_3;
                layer7_out_6_V_reg_675 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_4;
                layer7_out_8_V_reg_680 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_5;
                layer7_out_9_V_reg_685 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_ufixed_5_0_4_0_0_relu_config7_s_fu_93_ap_return_6;
                layer8_out_0_V_reg_735 <= grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_return_0;
                layer8_out_1_V_reg_740 <= grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_return_1;
                layer8_out_2_V_reg_745 <= grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_return_2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp102_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp102 <= ((ap_start = ap_const_logic_1) and ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp26_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp26 <= ((ap_start = ap_const_logic_1) and ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp57_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp57 <= ((ap_start = ap_const_logic_1) and ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp95_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp95 <= ((ap_start = ap_const_logic_1) and ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call39_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call39 <= ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call73_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call73 <= ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call77_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call77 <= ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call9_assign_proc : process(ap_start, fc1_input_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call9 <= ((fc1_input_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter23, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to22_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to22 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to22)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to22 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    fc1_input_V_ap_vld_in_sig_assign_proc : process(fc1_input_V_ap_vld, fc1_input_V_ap_vld_preg)
    begin
        if ((fc1_input_V_ap_vld = ap_const_logic_1)) then 
            fc1_input_V_ap_vld_in_sig <= fc1_input_V_ap_vld;
        else 
            fc1_input_V_ap_vld_in_sig <= fc1_input_V_ap_vld_preg;
        end if; 
    end process;


    fc1_input_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, fc1_input_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fc1_input_V_blk_n <= fc1_input_V_ap_vld;
        else 
            fc1_input_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fc1_input_V_in_sig_assign_proc : process(fc1_input_V_ap_vld, fc1_input_V, fc1_input_V_preg)
    begin
        if ((fc1_input_V_ap_vld = ap_const_logic_1)) then 
            fc1_input_V_in_sig <= fc1_input_V;
        else 
            fc1_input_V_in_sig <= fc1_input_V_preg;
        end if; 
    end process;


    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp26)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp26) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_151_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp57)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp57) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_75_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp95)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp95) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_ufixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_fu_131_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp102)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_ce <= ap_const_logic_1;
        else 
            grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_start <= grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_start_reg;
    layer10_out_0_V <= grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_return_0;

    layer10_out_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter23, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            layer10_out_0_V_ap_vld <= ap_const_logic_1;
        else 
            layer10_out_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer10_out_1_V <= grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_return_1;

    layer10_out_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter23, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            layer10_out_1_V_ap_vld <= ap_const_logic_1;
        else 
            layer10_out_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer10_out_2_V <= grp_softmax_stable_ap_fixed_ap_fixed_16_2_5_3_0_softmax_config10_s_fu_157_ap_return_2;

    layer10_out_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter23, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            layer10_out_2_V_ap_vld <= ap_const_logic_1;
        else 
            layer10_out_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
